#!/usr/bin/env node

/**
 * Problem
 * ========
 *  Each new term in the Fibonacci sequence is generated by adding the previous two terms.
 *  By starting with 1 and 2, the first 10 terms will be:
 *      1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
 *  By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.
 *
 * Latest Run Stats
 * ====== === =====
 * real    0m0.446s
 * user    0m0.428s
 * sys     0m0.018s
 *
 */

var _ = require('underscore'),
    async = require('async'),
    limit = 4000000;

var fib = function(term){
    if(term === 0){return 0;}
    if(term === 1){return 1;}
    return fib(term-1) + fib(term-2);
};

var terms = [],
    i=3,
    underLimit = true;

async.whilst(
    function() { return underLimit; },
    function(callback) {
        var fTerm = fib(i);
        i+=3;
        if(fTerm > limit){
            underLimit = false;
            return callback();
        }
        terms.push(fTerm);
        callback();
    },
    function(){
        //all done.  We know that every third term in the series will be even, so sum only those.
        var sum = _.reduce(terms, function(memo, num){ return memo + num; }, 0);
        console.log(sum);
    }
);
